// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// MaritalStatus Marital status
// swagger:model MaritalStatus
type MaritalStatus string

const (

	// MaritalStatusSINGLE captures enum value "SINGLE"
	MaritalStatusSINGLE MaritalStatus = "SINGLE"

	// MaritalStatusENGAGED captures enum value "ENGAGED"
	MaritalStatusENGAGED MaritalStatus = "ENGAGED"

	// MaritalStatusMARRIED captures enum value "MARRIED"
	MaritalStatusMARRIED MaritalStatus = "MARRIED"

	// MaritalStatusDIVORCED captures enum value "DIVORCED"
	MaritalStatusDIVORCED MaritalStatus = "DIVORCED"

	// MaritalStatusREMARRIED captures enum value "REMARRIED"
	MaritalStatusREMARRIED MaritalStatus = "REMARRIED"

	// MaritalStatusSEPARATED captures enum value "SEPARATED"
	MaritalStatusSEPARATED MaritalStatus = "SEPARATED"

	// MaritalStatusWIDOWED captures enum value "WIDOWED"
	MaritalStatusWIDOWED MaritalStatus = "WIDOWED"

	// MaritalStatusCAPTAINSWOMAN captures enum value "CAPTAINS_WOMAN"
	MaritalStatusCAPTAINSWOMAN MaritalStatus = "CAPTAINS_WOMAN"
)

// for schema
var maritalStatusEnum []interface{}

func init() {
	var res []MaritalStatus
	if err := json.Unmarshal([]byte(`["SINGLE","ENGAGED","MARRIED","DIVORCED","REMARRIED","SEPARATED","WIDOWED","CAPTAINS_WOMAN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		maritalStatusEnum = append(maritalStatusEnum, v)
	}
}

func (m MaritalStatus) validateMaritalStatusEnum(path, location string, value MaritalStatus) error {
	if err := validate.Enum(path, location, value, maritalStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this marital status
func (m MaritalStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMaritalStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
